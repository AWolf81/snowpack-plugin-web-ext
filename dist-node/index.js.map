{"version":3,"file":"index.js","sources":["../dist-src/config.js","../dist-src/templates/manifest.js","../dist-src/templates/web-ext-config.js","../dist-src/index.js"],"sourcesContent":["// source from https://github.com/mmktomato/parcel-plugin-web-ext-tool/blob/master/src/config.js\r\nimport * as process from \"process\";\r\nimport * as path from \"path\";\r\nimport { promises as fsPromise } from \"fs\";\r\nimport * as os from \"os\";\r\n// https://extensionworkshop.com/documentation/develop/getting-started-with-web-ext/#automatic-discovery-of-configuration-files\r\nconst getCwdConfig = () => {\r\n    const configPath = path.resolve(process.cwd(), \"web-ext-config.js\");\r\n    let obj = null;\r\n    try {\r\n        obj = require(configPath);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    return obj || null;\r\n};\r\nconst getPackageJsonConfig = async () => {\r\n    const packageJsonPath = path.resolve(process.cwd(), \"package.json\");\r\n    let obj = null;\r\n    try {\r\n        const content = await fsPromise.readFile(packageJsonPath, { encoding: \"utf8\" });\r\n        obj = JSON.parse(content);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    return (obj && obj.webExt) ? obj.webExt : null;\r\n};\r\nconst getUserHomeConfig = () => {\r\n    const configPath = path.resolve(os.homedir(), \".web-ext-config.js\");\r\n    let obj = null;\r\n    try {\r\n        obj = require(configPath);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n    return obj || null;\r\n};\r\nconst flatten = (config) => {\r\n    // Merge global options and \"run\" options.\r\n    // See \"Global options\" sections in https://extensionworkshop.com/documentation/develop/web-ext-command-reference/\r\n    if (!config || Object.keys(config).length < 1) {\r\n        return {};\r\n    }\r\n    // Intentionally omitted \"help\" and \"version\".\r\n    const globalOptions = [\r\n        \"artifactsDir\", \"config\", \"configDiscovery\", \"noConfigDiscovery\", \"ignoreFiles\", \"noInput\", \"sourceDir\", \"verbose\"\r\n    ];\r\n    const ret = { ...config.run };\r\n    globalOptions.forEach(opt => {\r\n        if (opt in config) {\r\n            ret[opt] = config[opt];\r\n        }\r\n    });\r\n    return ret;\r\n};\r\nexport const getConfig = async () => {\r\n    const userHomeConfig = flatten(getUserHomeConfig());\r\n    const packageJsonConfig = flatten(await getPackageJsonConfig());\r\n    const cwdConfig = flatten(getCwdConfig());\r\n    let config = Object.assign(userHomeConfig, packageJsonConfig);\r\n    config = Object.assign(config, cwdConfig);\r\n    if (config.noReload === undefined) {\r\n        // default to noReload if nothing is defined in config\r\n        config.noReload = true;\r\n    }\r\n    if (!config.sourceDir) {\r\n        config.sourceDir = process.cwd();\r\n    }\r\n    config.sourceDir = path.resolve(config.sourceDir);\r\n    return config;\r\n};\r\n","const DEFAULT_MANIFEST = {\r\n    \"name\": \"my-web-extension\",\r\n    \"version\": \"0.0.1\",\r\n    \"description\": \"Add a brief description of your extension here...\",\r\n    \"manifest_version\": 2,\r\n    \"permissions\": [],\r\n    \"minimum_chrome_version\": \"61\",\r\n    //\"minimum_chrome_version\": \"88\", // min for manifest version 3 (not ready yet 08.01.2021)\r\n    \"browser_action\": {\r\n        \"default_popup\": \"index.html\"\r\n    },\r\n    \"background\": {\r\n        \"scripts\": []\r\n        // background scripts will be replaced by service worker in MV3\r\n        // (see https://developer.chrome.com/docs/extensions/mv3/migrating_to_service_workers/)\r\n        // background: {\r\n        //   service_worker: \"\"\r\n        // },\r\n    },\r\n    \"content_scripts\": [],\r\n    \"web_accessible_resources\": []\r\n};\r\nexport default ({ name, version, description }) => ({\r\n    ...DEFAULT_MANIFEST,\r\n    name,\r\n    version,\r\n    description,\r\n});\r\n","export default ({ run: { target: browserTarget }, sourceDir }) => ({\r\n    run: {\r\n        target: Array.isArray(browserTarget) ? browserTarget : [browserTarget],\r\n        noReload: false\r\n    },\r\n    sourceDir\r\n});\r\n","import { existsSync, promises } from \"fs\";\r\nimport { relative as relativePath } from \"path\";\r\nimport webExt from \"web-ext\";\r\nimport { getConfig } from \"./config\";\r\nimport createManifest from \"./templates/manifest\";\r\nimport createWebextDefaultConfig from \"./templates/web-ext-config\";\r\nconst { writeFile, readFile, copyFile } = promises;\r\nlet runner = null;\r\nlet isProductionBuild = false;\r\nconst DEFAULT_BROWSER = \"chromium\";\r\nconst checkManifest = async (root = process.cwd(), buildOutDir) => {\r\n    try {\r\n        if (!existsSync(`${root}/manifest.json`)) {\r\n            // no manifest file exists --> create a manifest.json\r\n            const data = await readFile(`${root}/package.json`);\r\n            const packageJson = JSON.parse(data.toString(\"utf-8\"));\r\n            const manifestContent = createManifest(packageJson);\r\n            await writeFile(`${root}/manifest.json`, JSON.stringify(manifestContent, null, 2));\r\n            console.log(`${root}/manifest.json was succesfully created!`);\r\n        }\r\n        // always copy the manifest from root folder to build (with overwrite)\r\n        await copyFile(`${root}/manifest.json`, `${buildOutDir}/manifest.json`);\r\n    }\r\n    catch (err) {\r\n        console.error(err);\r\n    }\r\n};\r\nconst checkWebExtConfig = async (root = process.cwd(), buildOutDir) => {\r\n    try {\r\n        if (!existsSync(`${root}/web-ext-config.js`) && !existsSync(`${root}/web-ext.config.js`)) {\r\n            // no web-ext config file exists --> create a config file and show a log\r\n            const relBuildDir = relativePath(root, buildOutDir);\r\n            const webextConfig = createWebextDefaultConfig({ run: { target: DEFAULT_BROWSER }, sourceDir: relBuildDir });\r\n            await writeFile(`${root}/web-ext-config.js`, `module.exports = \\n${JSON.stringify(webextConfig, null, 2)}`);\r\n            console.log(`${root}/web-ext-config.js was succesfully created!`);\r\n        }\r\n    }\r\n    catch (err) {\r\n        console.error(err);\r\n    }\r\n};\r\nconst plugin = () => ({\r\n    name: \"web-ext-snowpack-plugin\",\r\n    config(snowpackConfig) {\r\n        const cwd = snowpackConfig?.installOptions?.cwd;\r\n        const { out } = snowpackConfig?.buildOptions;\r\n        // Check if there is a manifest.json (if not create a generic manifest in root directory)\r\n        checkManifest(cwd, out);\r\n        // Check if there is a config (if not create one and run chrome as default, just to have the file in place)\r\n        checkWebExtConfig(cwd, out);\r\n        isProductionBuild = (snowpackConfig.installOptions.env && snowpackConfig.installOptions.env[\"NODE_ENV\"] === 'production');\r\n    },\r\n    async run() {\r\n        // Note: Snowpack is ready with the files we're already in 'on(\"bundled\")'\r\n        // @todo: Parcel web-ext plugin is bailing if watch mode is disabled. Is it required?\r\n        const config = await getConfig();\r\n        console.info(\"Web-ext started...\");\r\n        if (isProductionBuild) {\r\n            // build for production\r\n            await webExt.cmd.build(config, {\r\n                sourceDir: \"build\"\r\n            });\r\n            return;\r\n        }\r\n        if (runner) {\r\n            runner.reloadAllExtensions();\r\n            return;\r\n        }\r\n        runner = await webExt.cmd.run(config, {\r\n            shouldExitProgram: true,\r\n        });\r\n        runner?.registerCleanup(() => {\r\n            runner = null;\r\n        });\r\n    }\r\n});\r\nexport default plugin;\r\n"],"names":["getCwdConfig","configPath","path","process","obj","require","e","getPackageJsonConfig","packageJsonPath","content","fsPromise","readFile","encoding","JSON","parse","webExt","getUserHomeConfig","os","flatten","config","Object","keys","length","globalOptions","ret","run","forEach","opt","getConfig","userHomeConfig","packageJsonConfig","cwdConfig","assign","noReload","undefined","sourceDir","DEFAULT_MANIFEST","name","version","description","target","browserTarget","Array","isArray","writeFile","copyFile","promises","runner","isProductionBuild","DEFAULT_BROWSER","checkManifest","root","cwd","buildOutDir","existsSync","data","packageJson","toString","manifestContent","createManifest","stringify","console","log","err","error","checkWebExtConfig","relBuildDir","relativePath","webextConfig","createWebextDefaultConfig","plugin","snowpackConfig","installOptions","out","buildOptions","env","info","cmd","build","reloadAllExtensions","shouldExitProgram","registerCleanup"],"mappings":"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"}